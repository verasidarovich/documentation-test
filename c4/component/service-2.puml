@startuml

!include ../styles.puml
' USE styles.puml FROM A PUBLIC URL IN ORDER TO DISPLAY THE DIAGRAM IN CONFLUENCE
' !include https://raw.githubusercontent.com//documentation-test/master/c4/styles.puml

title Component Diagram for Service #2

Person(person_customer, Customer, "Customer.")

System_Boundary(system_boundary_our_company, "Our company") {
    Container(container_frontend, "Frontend", "TypeScrypt 5, React 17, Redux 4", "Front-facing interface for desktop and mobile.", "react", $tags="application")
    Container(container_web, "Container web", "Java 8, Spring Framework 5, PostgreSQL 12, Kafka 2.6", "Provides many services for management of users and insurances.", "java", $tags="application")
    Container(container_frontend_bff, "Frontend-BFF", "Java 17, Spring Boot 3", "Backend for Frontend used by Frontend to connect to microservices.", "java", $tags="microservice")

    Container_Boundary(container_boundary_service_boundary, "Service #2") {
        Component(component_3, "Component 3", "Java 17, Spring Boot 3, Nimbus (JOSE+JWT) 9.31, Bouncy Castle 1.73", "Generates and verifies signed JWT tokens.", "java", $tags="component")
        Component(component_1, "Component 1", "Description of component 1.", "", $tags="resource")
        Component(component_2, "Component 2", "Description of component 2.", "", $tags="resource")
    }
}

Rel(person_customer, container_frontend, "Uses", "HTTPS")
Rel_L(container_frontend, container_web, "Generates JWT token", "sync, REST, JSON/HTTPS")
Rel_R(container_frontend, container_frontend_bff, "Makes request with signed JWT token", "sync, REST, JSON/HTTPS")
Rel(container_frontend_bff, component_3, "[Istio] Gets JWKS to verify signed JWT token", "sync, REST, JSON/HTTPS")
Rel(container_web, component_3, "Generates signed JWT token with user id and tenant", "sync, REST, JSON/HTTPS")
Rel_D(component_3, component_1, "Uses", "")
Rel_D(component_3, component_2, "Uses", "")

SHOW_LEGEND()

@enduml
